{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "SurfpoolWebSocketApiDocumentation",
  "description": "Complete WebSocket RPC API documentation with examples",
  "type": "object",
  "properties": {
    "endpoints": {
      "description": "All available WebSocket endpoints",
      "$ref": "#/$defs/SurfpoolWebSocketEndpoints"
    },
    "examples": {
      "description": "Usage examples for each endpoint",
      "$ref": "#/$defs/WebSocketExamples"
    },
    "protocol": {
      "description": "Protocol-level message formats",
      "$ref": "#/$defs/WebSocketProtocol"
    }
  },
  "required": [
    "endpoints",
    "protocol",
    "examples"
  ],
  "$defs": {
    "AccountNotification": {
      "description": "Account change notification",
      "type": "object",
      "properties": {
        "result": {
          "description": "Notification result",
          "$ref": "#/$defs/RpcResponse_for_UiAccountSchema"
        },
        "subscription": {
          "description": "Subscription ID",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "result",
        "subscription"
      ]
    },
    "AccountSubscribeEndpoint": {
      "description": "Account subscribe endpoint specification",
      "type": "object",
      "properties": {
        "notification": {
          "description": "Notification type sent to subscribers",
          "$ref": "#/$defs/AccountNotification"
        },
        "request": {
          "description": "Request parameters for account subscription",
          "$ref": "#/$defs/AccountSubscribeRequest"
        },
        "response": {
          "description": "Response type for subscription confirmation",
          "$ref": "#/$defs/SubscriptionResponse"
        }
      },
      "required": [
        "request",
        "response",
        "notification"
      ]
    },
    "AccountSubscribeRequest": {
      "description": "Request parameters for account subscription",
      "type": "object",
      "properties": {
        "config": {
          "description": "Optional subscription configuration",
          "anyOf": [
            {
              "$ref": "#/$defs/RpcAccountSubscribeConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "pubkey": {
          "description": "Account public key to monitor (base-58 encoded)",
          "type": "string"
        }
      },
      "required": [
        "pubkey"
      ]
    },
    "AccountSubscriptionEndpoints": {
      "description": "Account subscription WebSocket endpoints",
      "type": "object",
      "properties": {
        "accountSubscribe": {
          "description": "accountSubscribe - Subscribe to account change notifications",
          "$ref": "#/$defs/AccountSubscribeEndpoint"
        },
        "accountUnsubscribe": {
          "description": "accountUnsubscribe - Unsubscribe from account notifications",
          "$ref": "#/$defs/AccountUnsubscribeEndpoint"
        }
      },
      "required": [
        "accountSubscribe",
        "accountUnsubscribe"
      ]
    },
    "AccountSubscriptionExample": {
      "description": "Example account subscription workflow",
      "type": "object",
      "properties": {
        "notification": {
          "description": "Notification",
          "type": "string"
        },
        "subscribeRequest": {
          "description": "Subscribe request",
          "type": "string"
        },
        "subscribeResponse": {
          "description": "Subscribe response",
          "type": "string"
        },
        "unsubscribeRequest": {
          "description": "Unsubscribe request",
          "type": "string"
        },
        "unsubscribeResponse": {
          "description": "Unsubscribe response",
          "type": "string"
        }
      },
      "required": [
        "subscribeRequest",
        "subscribeResponse",
        "notification",
        "unsubscribeRequest",
        "unsubscribeResponse"
      ]
    },
    "AccountUnsubscribeEndpoint": {
      "description": "Account unsubscribe endpoint specification",
      "type": "object",
      "properties": {
        "request": {
          "description": "Request parameters for account unsubscription",
          "$ref": "#/$defs/UnsubscribeRequest"
        },
        "response": {
          "description": "Response indicating unsubscription success",
          "type": "boolean"
        }
      },
      "required": [
        "request",
        "response"
      ]
    },
    "CommitmentConfig": {
      "description": "Commitment configuration",
      "type": "object",
      "properties": {
        "commitment": {
          "description": "Commitment level",
          "$ref": "#/$defs/CommitmentLevel"
        }
      },
      "required": [
        "commitment"
      ]
    },
    "CommitmentLevel": {
      "description": "Commitment levels for transaction confirmation",
      "oneOf": [
        {
          "description": "Transaction is processed but not yet confirmed",
          "type": "string",
          "const": "Processed"
        },
        {
          "description": "Transaction is confirmed",
          "type": "string",
          "const": "Confirmed"
        },
        {
          "description": "Transaction is finalized",
          "type": "string",
          "const": "Finalized"
        }
      ]
    },
    "ProcessedSignatureResult": {
      "description": "Processed signature result with optional error",
      "type": "object",
      "properties": {
        "err": {
          "anyOf": [
            {
              "$ref": "#/$defs/TransactionErrorSchema"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "ReceivedSignatureResult": {
      "description": "Received signature confirmation",
      "type": "string",
      "enum": [
        "receivedSignature"
      ]
    },
    "RpcAccountSubscribeConfig": {
      "description": "Configuration for account subscription",
      "type": "object",
      "properties": {
        "commitment": {
          "description": "Commitment level for notifications",
          "anyOf": [
            {
              "$ref": "#/$defs/CommitmentConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "encoding": {
          "description": "Encoding format for account data",
          "anyOf": [
            {
              "$ref": "#/$defs/UiAccountEncoding"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "RpcResponseContext": {
      "description": "Response context containing slot and API version information",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "The API version",
          "type": [
            "string",
            "null"
          ]
        },
        "slot": {
          "description": "The current slot",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "slot"
      ]
    },
    "RpcResponse_for_RpcSignatureResult": {
      "description": "RPC response wrapper with context",
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/$defs/RpcResponseContext"
        },
        "value": {
          "$ref": "#/$defs/RpcSignatureResult"
        }
      },
      "required": [
        "context",
        "value"
      ]
    },
    "RpcResponse_for_UiAccountSchema": {
      "description": "RPC response wrapper with context",
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/$defs/RpcResponseContext"
        },
        "value": {
          "$ref": "#/$defs/UiAccountSchema"
        }
      },
      "required": [
        "context",
        "value"
      ]
    },
    "RpcSignatureResult": {
      "description": "Signature confirmation result",
      "anyOf": [
        {
          "$ref": "#/$defs/ProcessedSignatureResult"
        },
        {
          "$ref": "#/$defs/ReceivedSignatureResult"
        }
      ]
    },
    "RpcSignatureSubscribeConfig": {
      "description": "Configuration for signature subscription",
      "type": "object",
      "properties": {
        "commitment": {
          "description": "Commitment level for notifications",
          "anyOf": [
            {
              "$ref": "#/$defs/CommitmentConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "enableReceivedNotification": {
          "description": "Whether to enable received notification",
          "type": [
            "boolean",
            "null"
          ]
        }
      }
    },
    "SignatureNotification": {
      "description": "Signature status notification",
      "type": "object",
      "properties": {
        "result": {
          "description": "Notification result",
          "$ref": "#/$defs/RpcResponse_for_RpcSignatureResult"
        },
        "subscription": {
          "description": "Subscription ID",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "result",
        "subscription"
      ]
    },
    "SignatureSubscribeEndpoint": {
      "description": "Signature subscribe endpoint specification",
      "type": "object",
      "properties": {
        "notification": {
          "description": "Notification type sent to subscribers",
          "$ref": "#/$defs/SignatureNotification"
        },
        "request": {
          "description": "Request parameters for signature subscription",
          "$ref": "#/$defs/SignatureSubscribeRequest"
        },
        "response": {
          "description": "Response type for subscription confirmation",
          "$ref": "#/$defs/SubscriptionResponse"
        }
      },
      "required": [
        "request",
        "response",
        "notification"
      ]
    },
    "SignatureSubscribeRequest": {
      "description": "Request parameters for signature subscription",
      "type": "object",
      "properties": {
        "config": {
          "description": "Optional subscription configuration",
          "anyOf": [
            {
              "$ref": "#/$defs/RpcSignatureSubscribeConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "signature": {
          "description": "Transaction signature to monitor (base-58 encoded)",
          "type": "string"
        }
      },
      "required": [
        "signature"
      ]
    },
    "SignatureSubscriptionEndpoints": {
      "description": "Signature subscription WebSocket endpoints",
      "type": "object",
      "properties": {
        "signatureSubscribe": {
          "description": "signatureSubscribe - Subscribe to signature status notifications",
          "$ref": "#/$defs/SignatureSubscribeEndpoint"
        },
        "signatureUnsubscribe": {
          "description": "signatureUnsubscribe - Unsubscribe from signature notifications",
          "$ref": "#/$defs/SignatureUnsubscribeEndpoint"
        }
      },
      "required": [
        "signatureSubscribe",
        "signatureUnsubscribe"
      ]
    },
    "SignatureSubscriptionExample": {
      "description": "Example signature subscription workflow",
      "type": "object",
      "properties": {
        "notification": {
          "description": "Notification",
          "type": "string"
        },
        "subscribeRequest": {
          "description": "Subscribe request",
          "type": "string"
        },
        "subscribeResponse": {
          "description": "Subscribe response",
          "type": "string"
        },
        "unsubscribeRequest": {
          "description": "Unsubscribe request",
          "type": "string"
        },
        "unsubscribeResponse": {
          "description": "Unsubscribe response",
          "type": "string"
        }
      },
      "required": [
        "subscribeRequest",
        "subscribeResponse",
        "notification",
        "unsubscribeRequest",
        "unsubscribeResponse"
      ]
    },
    "SignatureUnsubscribeEndpoint": {
      "description": "Signature unsubscribe endpoint specification",
      "type": "object",
      "properties": {
        "request": {
          "description": "Request parameters for signature unsubscription",
          "$ref": "#/$defs/UnsubscribeRequest"
        },
        "response": {
          "description": "Response indicating unsubscription success",
          "type": "boolean"
        }
      },
      "required": [
        "request",
        "response"
      ]
    },
    "SlotInfo": {
      "description": "Slot information including current slot, parent slot, and root slot",
      "type": "object",
      "properties": {
        "parent": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "root": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "slot": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "slot",
        "parent",
        "root"
      ]
    },
    "SlotNotification": {
      "description": "Slot change notification",
      "type": "object",
      "properties": {
        "result": {
          "description": "Notification result",
          "$ref": "#/$defs/SlotInfo"
        },
        "subscription": {
          "description": "Subscription ID",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "result",
        "subscription"
      ]
    },
    "SlotSubscribeEndpoint": {
      "description": "Slot subscribe endpoint specification",
      "type": "object",
      "properties": {
        "notification": {
          "description": "Notification type sent to subscribers",
          "$ref": "#/$defs/SlotNotification"
        },
        "request": {
          "description": "Request parameters for slot subscription",
          "$ref": "#/$defs/SlotSubscribeRequest"
        },
        "response": {
          "description": "Response type for subscription confirmation",
          "$ref": "#/$defs/SubscriptionResponse"
        }
      },
      "required": [
        "request",
        "response",
        "notification"
      ]
    },
    "SlotSubscribeRequest": {
      "description": "Request parameters for slot subscription",
      "type": "object",
      "properties": {
        "config": {
          "description": "Optional subscription configuration",
          "anyOf": [
            {
              "$ref": "#/$defs/CommitmentConfig"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "SlotSubscriptionEndpoints": {
      "description": "Slot subscription WebSocket endpoints",
      "type": "object",
      "properties": {
        "slotSubscribe": {
          "description": "slotSubscribe - Subscribe to slot change notifications",
          "$ref": "#/$defs/SlotSubscribeEndpoint"
        },
        "slotUnsubscribe": {
          "description": "slotUnsubscribe - Unsubscribe from slot notifications",
          "$ref": "#/$defs/SlotUnsubscribeEndpoint"
        }
      },
      "required": [
        "slotSubscribe",
        "slotUnsubscribe"
      ]
    },
    "SlotSubscriptionExample": {
      "description": "Example slot subscription workflow",
      "type": "object",
      "properties": {
        "notification": {
          "description": "Notification",
          "type": "string"
        },
        "subscribeRequest": {
          "description": "Subscribe request",
          "type": "string"
        },
        "subscribeResponse": {
          "description": "Subscribe response",
          "type": "string"
        },
        "unsubscribeRequest": {
          "description": "Unsubscribe request",
          "type": "string"
        },
        "unsubscribeResponse": {
          "description": "Unsubscribe response",
          "type": "string"
        }
      },
      "required": [
        "subscribeRequest",
        "subscribeResponse",
        "notification",
        "unsubscribeRequest",
        "unsubscribeResponse"
      ]
    },
    "SlotUnsubscribeEndpoint": {
      "description": "Slot unsubscribe endpoint specification",
      "type": "object",
      "properties": {
        "request": {
          "description": "Request parameters for slot unsubscription",
          "$ref": "#/$defs/UnsubscribeRequest"
        },
        "response": {
          "description": "Response indicating unsubscription success",
          "type": "boolean"
        }
      },
      "required": [
        "request",
        "response"
      ]
    },
    "SubscriptionResponse": {
      "description": "Subscription response containing subscription ID",
      "type": "object",
      "properties": {
        "subscriptionId": {
          "description": "Unique subscription identifier",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "subscriptionId"
      ]
    },
    "SurfpoolWebSocketEndpoints": {
      "description": "Complete mapping of all Surfpool WebSocket RPC endpoints",
      "type": "object",
      "properties": {
        "accountSubscriptions": {
          "$ref": "#/$defs/AccountSubscriptionEndpoints"
        },
        "signatureSubscriptions": {
          "$ref": "#/$defs/SignatureSubscriptionEndpoints"
        },
        "slotSubscriptions": {
          "$ref": "#/$defs/SlotSubscriptionEndpoints"
        }
      },
      "required": [
        "signatureSubscriptions",
        "accountSubscriptions",
        "slotSubscriptions"
      ]
    },
    "TransactionErrorSchema": {
      "description": "Transaction error information",
      "type": "object",
      "properties": {
        "errorType": {
          "description": "Error type",
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "errorType"
      ]
    },
    "UiAccountEncoding": {
      "description": "Account data encoding formats",
      "oneOf": [
        {
          "description": "Base58 encoding",
          "type": "string",
          "const": "Base58"
        },
        {
          "description": "Base64 encoding",
          "type": "string",
          "const": "Base64"
        },
        {
          "description": "Base64+zstd encoding",
          "type": "string",
          "const": "base64+zstd"
        },
        {
          "description": "JSON parsed data",
          "type": "string",
          "const": "JsonParsed"
        }
      ]
    },
    "UiAccountSchema": {
      "description": "UI representation of an account",
      "type": "object",
      "properties": {
        "data": {
          "description": "Account data",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "executable": {
          "description": "Whether this account contains executable code",
          "type": "boolean"
        },
        "lamports": {
          "description": "Account balance in lamports",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        },
        "owner": {
          "description": "Program that owns this account",
          "type": "string"
        },
        "rentEpoch": {
          "description": "Epoch at which this account will next owe rent",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "lamports",
        "data",
        "owner",
        "executable",
        "rentEpoch"
      ]
    },
    "UnsubscribeRequest": {
      "description": "Unsubscribe request parameters",
      "type": "object",
      "properties": {
        "subscriptionId": {
          "description": "Subscription ID to remove",
          "type": "integer",
          "format": "uint64",
          "minimum": 0
        }
      },
      "required": [
        "subscriptionId"
      ]
    },
    "WebSocketError": {
      "description": "WebSocket JSON-RPC error",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code",
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "description": "Additional error data"
        },
        "message": {
          "description": "Error message",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "WebSocketExamples": {
      "description": "Example WebSocket interactions",
      "type": "object",
      "properties": {
        "accountSubscription": {
          "description": "Account subscription example",
          "$ref": "#/$defs/AccountSubscriptionExample"
        },
        "signatureSubscription": {
          "description": "Signature subscription example",
          "$ref": "#/$defs/SignatureSubscriptionExample"
        },
        "slotSubscription": {
          "description": "Slot subscription example",
          "$ref": "#/$defs/SlotSubscriptionExample"
        }
      },
      "required": [
        "signatureSubscription",
        "accountSubscription",
        "slotSubscription"
      ]
    },
    "WebSocketNotification": {
      "description": "WebSocket JSON-RPC notification",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "description": "JSON-RPC version",
          "type": "string"
        },
        "method": {
          "description": "Notification method",
          "type": "string"
        },
        "params": {
          "description": "Notification parameters"
        }
      },
      "required": [
        "jsonrpc",
        "method",
        "params"
      ]
    },
    "WebSocketProtocol": {
      "description": "WebSocket protocol message formats",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error message format",
          "$ref": "#/$defs/WebSocketError"
        },
        "notification": {
          "description": "Notification message format",
          "$ref": "#/$defs/WebSocketNotification"
        },
        "request": {
          "description": "Request message format",
          "$ref": "#/$defs/WebSocketRequest"
        },
        "response": {
          "description": "Response message format",
          "$ref": "#/$defs/WebSocketResponse"
        }
      },
      "required": [
        "request",
        "response",
        "notification",
        "error"
      ]
    },
    "WebSocketRequest": {
      "description": "WebSocket JSON-RPC request",
      "type": "object",
      "properties": {
        "id": {
          "description": "Request ID"
        },
        "jsonrpc": {
          "description": "JSON-RPC version",
          "type": "string"
        },
        "method": {
          "description": "Method name",
          "type": "string"
        },
        "params": {
          "description": "Method parameters"
        }
      },
      "required": [
        "jsonrpc",
        "id",
        "method",
        "params"
      ]
    },
    "WebSocketResponse": {
      "description": "WebSocket JSON-RPC response",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error response",
          "anyOf": [
            {
              "$ref": "#/$defs/WebSocketError"
            },
            {
              "type": "null"
            }
          ]
        },
        "id": {
          "description": "Request ID"
        },
        "jsonrpc": {
          "description": "JSON-RPC version",
          "type": "string"
        },
        "result": {
          "description": "Successful response result"
        }
      },
      "required": [
        "jsonrpc",
        "id"
      ]
    }
  }
}